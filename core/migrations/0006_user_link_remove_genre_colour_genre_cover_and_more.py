# Generated by Django 4.0.3 on 2022-03-19 21:41

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('core', '0005_alter_book_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('date_joined', models.DateTimeField(default=datetime.datetime(2022, 3, 19, 21, 41, 57, 726311, tzinfo=utc))),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now=True, help_text='Creation datetime of this object.')),
                ('updated_at', models.DateTimeField(auto_now_add=True, help_text='Last edited datetime of this object.')),
                ('name', models.CharField(help_text='The name of the link.', max_length=512)),
                ('url', models.URLField(help_text='The url, yea, pretty self-explanatory.', max_length=512)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RemoveField(
            model_name='genre',
            name='colour',
        ),
        migrations.AddField(
            model_name='genre',
            name='cover',
            field=models.ImageField(default='genre_covers/default.jpg', help_text="The genre's cover image.", upload_to='genre_covers'),
        ),
        migrations.AlterField(
            model_name='author',
            name='birth',
            field=models.DateField(help_text="The author's date of birth."),
        ),
        migrations.AlterField(
            model_name='author',
            name='created_at',
            field=models.DateTimeField(auto_now=True, help_text='Creation datetime of this object.'),
        ),
        migrations.AlterField(
            model_name='author',
            name='updated_at',
            field=models.DateTimeField(auto_now_add=True, help_text='Last edited datetime of this object.'),
        ),
        migrations.AlterField(
            model_name='book',
            name='created_at',
            field=models.DateTimeField(auto_now=True, help_text='Creation datetime of this object.'),
        ),
        migrations.AlterField(
            model_name='book',
            name='published_date',
            field=models.DateField(help_text='The date of publication of the book. Null if unknown.', null=True),
        ),
        migrations.AlterField(
            model_name='book',
            name='updated_at',
            field=models.DateTimeField(auto_now_add=True, help_text='Last edited datetime of this object.'),
        ),
        migrations.AlterField(
            model_name='bookauthor',
            name='created_at',
            field=models.DateTimeField(auto_now=True, help_text='Creation datetime of this object.'),
        ),
        migrations.AlterField(
            model_name='bookauthor',
            name='updated_at',
            field=models.DateTimeField(auto_now_add=True, help_text='Last edited datetime of this object.'),
        ),
        migrations.AlterField(
            model_name='genre',
            name='created_at',
            field=models.DateTimeField(auto_now=True, help_text='Creation datetime of this object.'),
        ),
        migrations.AlterField(
            model_name='genre',
            name='updated_at',
            field=models.DateTimeField(auto_now_add=True, help_text='Last edited datetime of this object.'),
        ),
        migrations.CreateModel(
            name='BookUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now=True, help_text='Creation datetime of this object.')),
                ('updated_at', models.DateTimeField(auto_now_add=True, help_text='Last edited datetime of this object.')),
                ('condition', models.CharField(choices=[('read', 'read'), ('fav', 'fav')], help_text='"read" to add to the user\'s Reading List, and "fav" for their Favourites', max_length=32)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.book')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BookLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now=True, help_text='Creation datetime of this object.')),
                ('updated_at', models.DateTimeField(auto_now_add=True, help_text='Last edited datetime of this object.')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.book')),
                ('link', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.link')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BookGenre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now=True, help_text='Creation datetime of this object.')),
                ('updated_at', models.DateTimeField(auto_now_add=True, help_text='Last edited datetime of this object.')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.book')),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.genre')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
